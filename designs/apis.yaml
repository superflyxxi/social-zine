openapi: 3.0.3
info:
  title: Social Zine
  description: Social Zine RESTful APIs
  version: 0.0.0

components:
  schemas:
    Post:
      type: object
      required:
        - socialNetwork
        - content
        - originator
      properties:
        _id:
          type: string
          description: The Post identifier.
          example: 37947398
        socialNetwork:
          type: string
          description: The social network identifier.
          example: fb
        content:
          type: string
          description: The content of the post.
          example: This is the first post I ever created.
        originator:
          type: string
          description: The ID of the originator of the post.
          example: 123897493
        reactions:
          type: array
          description: The likes for this Post.
          default: []
          items:
            $ref: '#/components/schemas/Reaction'
        comments:
          type: array
          description: All comments associated to this Post.
          default: []
          items:
            $ref: '#/components/schemas/Comment'
    Reaction:
      type: object
      required:
        - originator
      properties:
        originator:
          type: string
          description: The ID of the originator of the Reaction.
          example: 17893893
        type:
          enum:
            - like
          description: The type of Reaction
          default: like
    Comment:
      type: object
      required:
        - content
        - originator
      properties:
        content:
          type: string
          description: The content of the Comment.
          example: Very good post.
        originator:
          type: string
          description: The originator of the Comment.
          example: 7349830
  
    Error:
      type: object
      description: The error details.
      properties:
        type:
          type: string
          format: uri
          description: The type of the error.
          example: '/errors/SYSTEM_ERROR'
        title:
          type: string
          description: A human readable title for the error.
          example: 'System Error'
        status:
          type: integer
          description: The HTTP response status of this error.
          example: 500
        detail:
          type: string
          description: Some details about the error.
          example: 'An unknown system error has occurred.'
        instance:
          type: string
          format: uuid
          description: A unique identifier of this instance of the error.
          example: '2c046e7d-8d71-4f4e-9d79-aef50777a9b3'
  
  parameters:
    social-zine-user-id:
      name: SZ-User-Id
      in: header
      example: 12389343
      description: The Social Zine User ID
      required: true
      schema:
        type: string

  responses:
    invalid-user:
      description: The SZ-User-Id is invalid.
      content:
        application/json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Error'
              - example:
                  type: '/errors/INVALID_USER'
                  title: 'Invalid User'
                  status: 403
                  detail: 'User xyz is invalid.'

paths:
  /posts:
    parameters:
      - $ref: '#/components/parameters/social-zine-user-id'
    get:
      responses:
        '403':
          $ref: '#/components/responses/invalid-user'
        '200':
          description: Posts listed
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
    post:
      requestBody:
        description: The Post to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '403':
          $ref: '#/components/responses/invalid-user'
        '200':
          description: Post created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  '/posts/{id}':
    parameters:
      - $ref: '#/components/parameters/social-zine-user-id'
      - name: id
        in: path
        description: The Post ID in question.
        required: true
        schema:
          type: string
          example: 7843943
    get:
      responses:
        '403': 
          $ref: '#/components/responses/invalid-user'
        '200':
          description: Post retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
    delete:
      responses:
        '403': 
          $ref: '#/components/responses/invalid-user'
        '204':
          description: Post delete
